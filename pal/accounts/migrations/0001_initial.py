# Generated by Django 3.1.2 on 2021-07-03 13:32

import accounts.manager
import datetime
from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='CustomUser',
            fields=[
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('phone', models.CharField(max_length=15, unique=True, validators=[django.core.validators.RegexValidator('^[789]\\d{9}$')])),
                ('fullname', models.CharField(max_length=130, verbose_name='full name')),
                ('country_code', models.IntegerField(default=91)),
                ('email', models.EmailField(max_length=254, unique=True, verbose_name='emailaddress')),
                ('is_staff', models.BooleanField(default=False, verbose_name='is_staff')),
                ('is_active', models.BooleanField(default=True, verbose_name='is_active')),
                ('date_joined', models.DateField(default=datetime.date.today, verbose_name='date_joined')),
                ('change_pw', models.BooleanField(default=True)),
                ('is_customer', models.BooleanField(default=True)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'Accounts',
                'verbose_name_plural': 'Acconts',
                'ordering': ('id',),
            },
            managers=[
                ('objects', accounts.manager.CustomUserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Profile',
            fields=[
                ('id', models.UUIDField(primary_key=True, serialize=False)),
                ('fullname', models.CharField(max_length=100)),
                ('email', models.EmailField(blank=True, max_length=254, null=True, unique=True, verbose_name='emailaddress')),
                ('gender', models.CharField(blank=True, choices=[('Male', 'Male'), ('Female', 'Female'), ('Other', 'Other')], max_length=200, null=True)),
                ('pic', models.ImageField(blank=True, null=True, upload_to='CustomerImg')),
                ('uplod', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Address',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('fullname', models.CharField(max_length=130, verbose_name='full name')),
                ('phone', models.CharField(max_length=15, validators=[django.core.validators.RegexValidator('^[789]\\d{9}$')])),
                ('email', models.EmailField(blank=True, max_length=254, null=True, verbose_name='emailaddress')),
                ('house', models.CharField(max_length=300)),
                ('trade', models.CharField(max_length=200)),
                ('area', models.CharField(default='Jaipur', max_length=200)),
                ('city', models.CharField(max_length=100)),
                ('pin_code', models.IntegerField(validators=[django.core.validators.RegexValidator('^[1-9]{1}[0-9]{2}\\s{0,1}[0-9]{3}$')])),
                ('delTime', models.CharField(choices=[('Home (7 am - 9 pm delivery)', 'Home (7 am - 9 pm delivery)'), ('Office (10 am - 6 pm delivery)', 'Office (10 am - 6 pm delivery)'), ('AnyTime', 'AnyTime')], default='AnyTime', max_length=100)),
                ('state', models.CharField(choices=[('Andhra Pradesh ', 'Andhra Pradesh '), ('Arunachal Pradesh', 'Arunachal Pradesh'), ('Assam ', 'Assam '), ('Bihar ', 'Bihar '), ('Chhattisgarh ', 'Chhattisgarh '), ('Goa ', 'Goa '), ('Gujarat', 'Gujarat'), ('Haryana ', 'Haryana '), ('Himachal Pradesh ', 'Himachal Pradesh '), ('Jammu & Kashmir ', 'Jammu & Kashmir '), ('Jharkhand', ' Jharkhand'), ('Karnataka', 'Karnataka'), ('Kerala ', 'Kerala '), ('Madhya Pradesh', 'Madhya Pradesh'), ('Maharashtra', 'Maharashtra'), ('Manipur', 'Manipur'), ('Meghalaya', 'Meghalaya'), ('Mizoram ', 'Mizoram '), ('Nagaland', 'Nagaland'), ('Odisha ', 'Odisha '), ('Punjab ', 'Punjab '), ('Rajasthan', 'Rajasthan'), ('Sikkim ', 'Sikkim '), ('Tamil Nadu', 'Tamil Nadu'), ('Telangana', 'Telangana'), ('Tripura', 'Tripura'), ('Uttar Pradesh', 'Uttar Pradesh'), ('Uttarakhand', 'Uttarakhand'), ('West Bengal', 'West Bengal')], default='Rajasthan', max_length=200)),
                ('uplod', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='addressuser', to=settings.AUTH_USER_MODEL)),
            ],
        ),
    ]
